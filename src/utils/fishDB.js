export const fishDB = [
    {
        "id": "full-page-hor-scroll",
        "name": "Горизонтальный скролл страницы",
        "description": "Позволяет сделать для всей страницы горизонтальный скролл блоков. Можно добавить фиксированное меню сверху",
        "additional": "Рассчитана только на полноэкранные блоки (с window container = 100%).",
        "tags": ["скролл"],
        "price": 1000,
        "video": "https://youtu.be/dhBbZSuJXvI",
        "prep": "в тильде верстаются все блоки, если будет добавляться меню, оно также делается в zero-block.",
        "params": [
            {
                "param": "blocks",
                "desc": "id блоков сайта кроме меню (в кавычках через запятую)"
            },
            {
                "param": "menu",
                "desc": "id блока с меню (опционально)"
            },
            {
                "param": "hasDelay",
                "desc": "true, если нужно сгладить перемещение блоков [без сглаживания]"
            },
            {
                "param": "delaySpeed",
                "desc": "степень сглаживания (если hasDelay: true) (от 0.1 до 5) [1]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для инициализации горизонтального скролла [1200]"
            },
            {
                "param": "blockWidth",
                "desc": "ширина блоков в пикселях [ширина экрана]"
            }
        ],
        "code": "<script>\n    fishkey.fullPageHorScroll({\n        blocks: '#rec271808669, #rec271808669',    // id блоков\n        menu: '#rec271808669',                   // id меню\n        hasDelay: true,                     // отставание (плавное перемещение) true - есть, false - нет\n        delaySpeed: 1,                      // задержка отставания (0.1 - 5)\n        minWidth: 1200,                     // минимальная ширина экрана для анимации\n        blockWidth: 1200                    // ширина блоков\n    })\n</script>"
    },
    {
        "id": "blocks-hor-scroll",
        "name": "Горизонтальный скролл нескольких блоков",
        "description": "Позволяет сделать горизонтальный скролл нескольких (смежных) блоков на странице.",
        "additional": "Рассчитана только на полноэкранные блоки (с window container = 100%).",
        "tags": ["скролл"],
        "price": 1000,
        "video": "https://youtu.be/BZ3Y7AVs-00",
        "prep": "в тильде верстаются все блоки.",
        "params": [
            {
                "param": "blocks",
                "desc": "id блоков, которые будут скроллиться горизонтально (в кавычках через запятую)"
            },
            {
                "param": "speedCoeff",
                "desc": "ускорение прокрутки [1]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для инициализации горизонтального скролла [1200]"
            },
            {
                "param": "hasDelay",
                "desc": "true, если нужно сгладить перемещение блоков [без сглаживания]"
            },
            {
                "param": "delaySpeed",
                "desc": "степень сглаживания (если hasDelay: true) (от 0.1 до 5) [1]"
            }
        ],
        "code": "fishkey.horScroll({\n        blocks: '#rec271808669, #rec271808669',        // id блоков\n        speedCoeff: 1,                          // коэффициент ускорения скролла\n        minWidth: 980,                          // минимальная ширина экрана для анимации\n        hasDelay: true,                         // отставание (плавное перемещение) true - есть, false - нет\n        delaySpeed: 1                           // задержка отставания (0.1 - 5)\n    });\n</script>"
    },
    {
        "id": "elements-hor-scroll",
        "name": "Горизонтальный скролл элементов в блоке",
        "description": "позволяет сделать горизонтальный скролл всех элементов в одном блоке.",
        "additional": "Рассчитана только на полноэкранные блоки (с window container = 100%).",
        "tags": ["скролл"],
        "price": 1000,
        "video": "https://youtu.be/STOgy5odAtw",
        "prep": "в тильде верстается zero-block со всеми элементами. Элементы располагаются так, как они будут прокручиваться (то есть их надо ставить вправо за экран), можно добавить шапку (например, заголовок) над прокручиваемым местом.\n\nМаксимальное смещение (totalShift) элементов можно подобрать или рассчитать: из координаты х его положения (можно посмотреть в настройках элемента в zero-block) вычитается координата х, где он должен оказаться в конце скролла.",
        "params": [
            {
                "param": "block",
                "desc": "id блока с горизонтальным скроллом"
            },
            {
                "param": "header",
                "desc": "шапка (можно оставить пустым)"
            },
            {
                "param": "totalShift",
                "desc": "максимальное смещение элементов в пикселях (определяется по последнему элементу)"
            },
            {
                "param": "blockHeight",
                "desc": "высота блока со скроллом в пикселях из настроек zero-block)"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для инициализации горизонтального скролла [1200]"
            },
            {
                "param": "hasDelay",
                "desc": "true, если нужно сгладить перемещение блоков [без сглаживания]"
            },
            {
                "param": "delaySpeed",
                "desc": "степень сглаживания (если hasDelay: true) (от 0.1 до 5) [1]"
            }
        ],
        "code": "<script>\n    fishkey.horScrollBlock({\n        block: '#rec271808669',           // id блока\n        header: '#rec271808669',          // id заголовка\n        minWidth: 1200,             // минимальная ширина экрана для анимации\n        totalShift: {           // максимальное смещение блоков (если для всех экранов одинаковое, можно вместо всего блока {...} поставить одно число, например 1710)\n            '1200': 1710,\n            '980': 1900,\n            '640': 1610,\n            '480': 1800,\n            '320': 1800,\n        },\n        blockHeight: 530,           // высота блока со скроллом\n        hasDelay: true,             // сглаживание (плавное перемещение) true - есть, false - нет\n        delaySpeed: 1               // степень сглаживания (0.1 - 5)\n    });\n</script>"
    },
    {
        "id": "page-scroll",
        "name": "Смена экранов по скроллу",
        "description": "Позволяет сделать смену всех экранов на сайте перелистыванием по скроллу.",
        "tags": ["скролл"],
        "price": 1000,
        "video": "https://youtu.be/E1Ew6cFDDCs",
        "prep": "в Тильде верстаются все блоки. Если в блоках есть картинки, им лучше отключить lazy-load.",
        "params": [
            {
                "param": "blocks",
                "desc": "id всех активных блоков"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для инициализации [1200]"
            },
            {
                "param": "animTime",
                "desc": "время смены блоков в секундах"
            }
        ],
        "code": "<script>\n    fishkey.screenChangeOnScroll({\n        blocks: '#rec271808669, #rec271808669',        // id блоков\n        minWidth: 1200,                         // минимальная ширина экрана для анимации\n        animTime: 0.8                           // время смены блока (в секундах)\n    })\n</script>"
    },
    {
        "id": "curtain-scroll",
        "name": "Переключение экранов шторкой",
        "description": "Позволяет добавить переключение экранов по скроллу шторкой с возможностью сделать зум фона.",
        "tags": ["скролл"],
        "price": 1000,
        "video": "https://youtu.be/kBwnXG_Jlks",
        "prep": "создаются все нужные блоки, им можно установить фоновые изображения.",
        "params": [
            {
                "param": "selectors",
                "desc": "id всех активных блоков (в кавычках через запятую)"
            },
            {
                "param": "easeTime",
                "desc": "время перключения в секундах [0.8]"
            },
            {
                "param": "easeFunction",
                "desc": "кривая безье или название временной функции [ease]"
            },
            {
                "param": "isBackgroundZoomable",
                "desc": "будут ли фоновые картинки зумиться [false]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [0]"
            }
        ],
        "code": "<script>\n    fishkey.curtainChange({\n        selectors: '#rec253401070, #rec253401673, #rec253401517',   // активные блоки\n        easeTime: 0.8,                                              // время переключения (в секундах)\n        easeFunction: '',                                           // кривая безье анимации (можно оставить пустым)\n        isBackgroundZoomable: true,                                 // зум картинок на фоне (true - есть, false - нет)\n        minWidth: 1200                                              // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "bg-block",
        "name": "Наезжание блоков",
        "description": "позволяет добавить наезжание основного контента страницы на верхний или нижний блок.",
        "additional": "Еще можно добавить эффектики (зум, яркость, размытие, тень), но с ними лучше не перебарщивать — нагружают браузер.",
        "tags": ["скролл"],
        "price": 1000,
        "video": "https://youtu.be/44r2wEYATBQ",
        "prep": "создаются все нужные блоки. Целевой блок должен стоять самым первым (не считая хедера) в случае с верхним блоком или самым последним в случае с нижним (не считая функциональные блоки с попапами, кодом и т.п.).\n\nХром может плохо отрабатывать размытие темных картинок. В таком случае можно добавить на страницу код из последнего блока (после кода фишки), заменив цвет на максимально близкий с вашей картинкой (или оставить черный).",
        "params": [
            {
                "param": "selector",
                "desc": "id нужного блока (верхнего или нижнего)"
            },
            {
                "param": "type",
                "desc": "тип блока: верхний (top) или нижний (bottom)"
            },
            {
                "param": "translationCoeff",
                "desc": "коэффициент движения блока относительно скролла от 0 до 1 (0 - стоит на месте на экране, 1 - движется как обычно)"
            },
            {
                "param": "filters",
                "desc": "применяемые к блоку эффекты; во всех фильтрах параметр coeff - коэффициент применения эффекта относительно скролла (при установке в ноль эффект отключается):"
            },
            {
                "param": "zoom",
                "desc": "увеличение масштаба блока"
            },
            {
                "param": "brightness",
                "desc": "яркость (если коэффициент больше нуля - будет становится ярче, если меньше - темнее)"
            },
            {
                "param": "blur",
                "desc": "размытие блока (gap - увеличение ширины блока в пикселях, если для него установлена фоновая картинка - иначе размытие плохо отрабатывает края изображения)"
            },
            {
                "param": "shadow",
                "desc": "тень на скрываемом крае блока (color - цвет тени, spreadCoeff - коэффициент распространение тени)"
            }
        ],
        "code": [
            "<script>\n    fishkey.bgBlock({\n        selector: '#rec367812074',  // селектор блока\n        type: 'top',                // тип блока: top / bottom\n        translationCoeff: 0.6,      // коэффициент движения блока от 0 (включительно) до 1\n        filters: {                  // эффекты\n            zoom: {                 // увеличение блока\n                coeff: 0.1          // от 0 до любого (разумно - до 1)\n            },\n            brightness: {           // яркость блока\n                coeff: -0.75        // от -любого (темнее) до любого (светлее)\n            },\n            blur: {                 // размытие блока\n                coeff: 4,           // от 0 до любого\n                gap: 5              // добавочная ширина блока для устранения проблемы плохой отработки размытия браузером\n            },\n            shadow: {               // тень поверх скрываемого края блока\n                coeff: 100,         // от 0 до любого\n                color: 'rgba(255, 255, 255, 0.25)',     // цвет тени\n                spreadCoeff: 3      // коэффициент распространения тени (для сглаживания краев)\n            }\n        }\n    });\n</script>",
            "<style>\n    body {\n        background-color: #000000;\n    }\n</style>"
        ]
    },
    {
        "id": "italic-text",
        "name": "Текст италиком",
        "description": "При наведении на ссылку ее текст становится курсивным.",
        "tags": ["hover", "текст", "ссылки"],
        "price": 500,
        "video": "https://youtu.be/Da10zsPgYXo",
        "prep": "в Тильде создаются текстовые элементы, которым задаются ссылки. Для данного шрифта должно быть подключено соответствующее курсивное начертание!",
        "params": [
            {
                "param": "selector",
                "desc": "id блока, в котором будут меняться ссылки [вся страница]"
            }
        ],
        "code": "<script>\n    fishkey.italicLinks({\n        selector: '#rec271808669'            // id блока, в котором будут меняться ссылки (оставить пустым для всей страницы)\n    });\n</script>"
    },
    {
        "id": "hover-text",
        "name": "Текст над элементами",
        "description": "при наведении на элементы курсор заменяется на соответствующую подпись.",
        "additional": "Надпись может появляться и не убирая курсор.",
        "tags": ["hover", "текст"],
        "price": 500,
        "video": "https://youtu.be/YL1Oxe67I-E",
        "prep": "в Тильде создаются элементы, поверх которых будут появляться подписи, а также отдельный текстовый элемент, которым задаётся стиль подписей. В нем нужно задать выравнивание текста по центру. Лучше спрятать его сбоку от блока (за экраном) в режиме редактирования.",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы элементов, над которыми будут появляться подписи (в кавычках через запятую)"
            },
            {
                "param": "cursor",
                "desc": "селектор текстового элемента для курсора"
            },
            {
                "param": "texts",
                "desc": "тексты для подписей над соответствующими элементами (через запятую в отдельных кавычках)"
            },
            {
                "param": "isCursorHidden",
                "desc": "будет ли при появлении подписей исчезать стандартный курсор (true — будет, false — не будет) [false]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.hoverText({\n        selectors: '[data-elem-id=\"1602066212345\"], [data-elem-id=\"1602066267890\"] ',     // селекторы элементов\n        cursor: '[data-elem-id=\"1602066288503\"]',               // селектор текста (нужно создать отдельный текстовый элемент)\n        texts: [                                                // подписи для соответствующих элементов\n            'Фишки',\n            'Это',\n            'Круууто!'\n            ],\n        isCursorHidden: false,                                  // будет ли исчезать стандартный курсор\n        minWidth: 1200                                          // минимальная ширина экрана для анимации\n    })\n</script>"
    },
    {
        "id": "bg-photos",
        "name": "Картинки за элементами",
        "description": "Позволяет добавить картинки (или любые другие элементы), которые будут появляться за выбранными элементами при наведении на них и прилипать к курсору.",
        "tags": ["курсор", "hover", "фото"],
        "price": 800,
        "video": "https://youtu.be/GA_ghya46dI",
        "prep": "в Тильде добавляются элементы и картинки, картинки центрируются позади элементов.",
        "params": [
            {
                "param": "elements",
                "desc": "селекторы элементов"
            },
            {
                "param": "photos",
                "desc": "селекторы фотографий"
            },
            {
                "param": "delaySpeed",
                "desc": "скорость перемещения фото (0.005 - 0.5) [0.1]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            }
        ],
        "code": "<script>\n    fishkey.bgPhotos({\n        elements: [                                 // селекторы элементов\n            '[data-elem-id=\"1601629312299\"]',\n            '[data-elem-id=\"1601629335350\"]',\n            '[data-elem-id=\"1601629345994\"]'\n        ],\n        photos: [                                   // селекторы фото\n            '[data-elem-id=\"1601629376674\"]',\n            '[data-elem-id=\"1601629440924\"]',\n            '[data-elem-id=\"1601629451776\"]'\n        ],\n        delaySpeed: 0.01,                           // скорость перемещения фото (0.005 - 0.5)\n        minWidth: 1200                              // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "sticky-elements",
        "name": "Прилипание элементов",
        "description": "При наведении на элемент он «прилипает» к курсору.",
        "tags": ["курсор", "hover"],
        "price": 800,
        "video": "https://youtu.be/Qe1-wsR-Occ",
        "prep": "в Тильде создаются нужные элементы.",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы прилипающих элементов (в кавычках через запятую)"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.parallax({\n        selectors: '[data-elem-id=\"1601629312299\"], [data-elem-id=\"1601629312209\"]',       // любые селекторы прилипающих элементов\n        minWidth: 1200                  // минимальная ширина экрана для анимации\n    })\n</script>"
    },
    {
        "id": "photo-zoom",
        "name": "Зум изображений",
        "description": "Позволяет добавить зум фото в его границах при наведении.",
        "tags": ["hover", "фото"],
        "price": 800,
        "video": "https://youtu.be/rJy9X2q9Cd0",
        "prep": "добавляются фотографии (через элементы 'image')",
        "params": [
            {
                "param": "photos",
                "desc": "селекторы фото: можно использовать как data-elem-id для зума конкретных фотографий, так и id блоков для зума всех фотографий в них"
            },
            {
                "param": "easeTime",
                "desc": "время анимации в секундах [0.4]"
            },
            {
                "param": "easeFunction",
                "desc": "кривая безье или временная функция [ease-in-out] "
            },
            {
                "param": "scale",
                "desc": "коэффициент увеличеия [1.2]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.photoZoom({\n        photos: '#rec253415611, [data-elem-id=\"1615449419944\"]',        // селекторы фото или блоков, в которых они лежат\n        easeTime: 0.4,                      // время анимации (в секундах)\n        easeFunction: '',                   // кривая безье анимации (можно оставить пустым)\n        scale: 1.1,                         // коэффициент увеличения\n        minWidth: 1200                      // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "text-coloring",
        "name": "Заполнение текста",
        "description": "Добавляет для выбранного текста плавное заполнение градиентом.",
        "additional": "В Safari заполнение не работает. Вместо этого будет плавно меняться цвет всего текста. Если такой функционал вам не подходит, можно воспользоваться фишкой «Смена элементов в разных браузерах».",
        "tags": ["hover", "фото"],
        "price": 800,
        "video": "https://youtu.be/FdMcgDpUNh0",
        "prep": "добавляются текстовые элементы.",
        "params": [
            {
                "param": "selector",
                "desc": "селектор элемента с текстом"
            },
            {
                "param": "gradientDirection",
                "desc": "направление заполнения (to right, to left, to top. to bottom) [слева направо]"
            },
            {
                "param": "fillingColor",
                "desc": "заполняющий цвет [красный]"
            },
            {
                "param": "animTime",
                "desc": "время анимации в секундах [0.5]"
            },
            {
                "param": "colorsDiff",
                "desc": "длина градиента в процентах [50]"
            },
            {
                "param": "snapBackwards",
                "desc": "будет ли заполнение двигаться назад или просто исчезнет (true - исчезнет, false - будет двигаться) [двигается назад]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.textColoring({\n        selector: '[data-elem-id=\"1470209944682\"]', // селектор элемента с текстом\n        gradientDirection: 'to right',              // направление заполнения\n        fillingColor: '#FF0000',                    // заполняющий цвет\n        animTime: 0.5,                              // время анимации\n        colorsDiff: 20,                             // длина градиента в процентах\n        snapBackwards: false,                       // будет ли исчезать\n        minWidth: 1200                              // минимальная ширина экрана\n    });\n</script>"
    },
    {
        "id": "popping-cards",
        "name": "3D-эффект элементов",
        "description": "Добавляет эффект 3D при наведении на карточку или любую другую группу элементов.",
        "tags": ["hover", "фото"],
        "price": 800,
        "video": "https://youtu.be/q1JwlW2W6Fw",
        "prep": "если фишка используется на стандартных карточках товаров Тильды — создается каталог. Для стандартного каталога рекомендуется использовать пресетную настройку (в самом низу), потому что вручную настраивать больно :)\n\nЕсли используются кастомные карточки, для них необходимо использовать фишку «Объединение элементов». Для каждой карточки — свой объединяющий элемент!\n\nТакже, если карточек больше одной, рекомендуется задать всем используемым элементам кастомные классы, которые будут использоваться при настройке фишки (например, всем фонам карточек — класс 'customCard', всем заголовкам — 'customCard-title' и т.п.). Для этого необходимо в режиме редактирования блока нажать на элемент правой кнопкой мыши и выбрать «Add CSS Class Name». Задаются классы без точки, а в фишке используются с точкой!",
        "params": [
            {
                "param": "cardsSelector",
                "desc": "селектор контейнера карточки (например '.customCard' для кастомной карточки с заданным классом или '.t754__col' для стандартного каталога"
            },
            {
                "param": "itemsSelectors",
                "desc": "селекторы анимированных элементов "
            },
            {
                "param": "zPositions",
                "desc": "на сколько будет выплывать вперед каждый соответствующий элемент (чем больше значение, тем выше он оказывается в слоях среди остальных элементов)"
            },
            {
                "param": "isCustom",
                "desc": "используются ли кастомные карточки (true - кастомные, false - стандартные) [станрадтные]"
            },
            {
                "param": "coeff",
                "desc": "коэффициент отклонения карточки при движении мыши [10]"
            },
            {
                "param": "perspective",
                "desc": "сложно объяснить, попробуйте поиграться :) [5000]"
            },
            {
                "param": "animTime",
                "desc": "время анимации возвращения карточки в исходное положение в секундах [0.4]"
            },
            {
                "param": "easeFunction",
                "desc": "кривая безье или временная функция [ease]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            }
        ],
        "code": "<script>\n    fishkey.poppingCards({\n        cardsSelector: '.customCard',   // селектор объединяющего элемента\n        itemsSelectors: [               // селекторы анимированных внутренних элементов карточки\n            '.customCard-title',\n            '.customCard-desc',\n            '.customCard-img'\n        ],\n        zPositions: [                   // насколько будут выплывать вперед внутренние элементы\n            60,\n            70,\n            55\n        ],\n        isCustom: true,                 // используются ли кастомные карточки\n        coeff: 10,                      // коэффициент отклонения карточки (больше coeff - меньше отклоняется)\n        animTime: 0.5,                  // время анимации (поворота карточки и выплывания элементов)\n        easeFunction: 'ease',           // кривая анимации\n        minWidth: 1200                  // минимальная ширина экрана\n    });\n</script>\n\n<script>\n    fishkey.poppingCards__std({\n        coeff: 20,      // коэффициент отклонения карточки (больше coeff - меньше отклоняется)\n        animTime: 1     // время анимации (поворота карточки и выплывания элементов)\n    });\n</script>"
    },
    {
        "id": "flipping-text",
        "name": "Переворачивание текста",
        "description": "при наведении мыши на текст он «переворачивается»",
        "additional": "работает только с однострочными текстами!",
        "tags": ["hover", "текст"],
        "price": 800,
        "video": "https://youtu.be/ZyOIi0bC0x4",
        "prep": "в тильде добавляются текстовые элементы. Можно задать им класс 'flip-text' — тогда не придется добавлять в фишку селекторы!",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы элементов (можно не задавать или оставить пустым (то есть selectors: ''), если вы задали всем элементам класс 'flip-text') ['flip-text']"
            },
            {
                "param": "transitionTime",
                "desc": "время анимации в секундах [0.4]"
            },
            {
                "param": "transitionDelay",
                "desc": "задержка появления текста в секундах [0.1]"
            }
        ],
        "code": "<script>\n    fishkey.flippingText({\n        selectors: '[data-elem-id=\"1470209944682\"], [data-elem-id=\"1633774449096\"]',\n        transitionTime: 0.4,\n        transitionDelay: 0.1\n    });\n</script>"
    },
    {
        "id": "one-side-button",
        "name": "Односторонняя кнопка",
        "description": "При наведении на кнопку у нее сменяется фон (слева-направо, сверху-вниз и т.д.), при убирании курсора с нее, фон меняется обратно в ту же сторону.",
        "tags": ["hover", "кнопки"],
        "price": 800,
        "video": "https://youtu.be/ZyOIi0bC0x4",
        "prep": "в Тильде создаются кнопки (элементом button). Если вы не делаете кнопкам обводку, уберите у них свойство border (стоит 1 по умолчанию).",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы кнопок (в кавычках через запятую)"
            },
            {
                "param": "firstColor",
                "desc": "код основного цвета кнопки (в hex формате с #) [черный] "
            },
            {
                "param": "secondColor",
                "desc": "код второго цвета кнопки [белый] "
            },
            {
                "param": "whereTo",
                "desc": "направление смены фона ('left', 'right', 'top', 'bottom') "
            },
            {
                "param": "firstTextColor",
                "desc": "код основного цвета текста [белый]"
            },
            {
                "param": "secondTextColor",
                "desc": "код второго цвета текста [черный]"
            },
            {
                "param": "animTime",
                "desc": "время анимации в миллисекундах [400]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.oneSideButton({\n        selectors: '[data-elem-id=\"1599820091591\"], [data-elem-id=\"1602152450564\"]',    // селекторы кнопок\n        firstColor: '#ff0000',              // основной цвет фона\n        secondColor: '#0000ff',            // второй цвет фона\n        whereTo: 'left',                // направление смены цвета\n        firstTextColor: '#0000ff',         // основной цвет текста\n        secondTextColor: '#ff0000',         // второй цвет текста\n        animTime: 400,                  // время анимации (в миллисекундах)\n        minWidth: 1200                  // минимальная ширина экрана для анимации\n    });\n</script>"
    },
    {
        "id": "two-side-button",
        "name": "Двухсторонняя  кнопка",
        "description": "При наведении на кнопку у нее сменяется фон (слева-направо, сверху-вниз и т.д.), при убирании курсора с нее, фон меняется обратно в обратную сторону.",
        "tags": ["hover", "кнопки"],
        "price": 800,
        "video": "https://youtu.be/Hp7tooPPfYM",
        "prep": "в Тильде создаются кнопки (элементом button). Если вы не делаете кнопкам обводку, уберите у них свойство border (стоит 1 по умолчанию).",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы кнопок (в кавычках через запятую)"
            },
            {
                "param": "firstColor",
                "desc": "код основного цвета кнопки (в hex формате с #) [черный] "
            },
            {
                "param": "secondColor",
                "desc": "код второго цвета кнопки [белый] "
            },
            {
                "param": "whereTo",
                "desc": "направление смены фона ('left', 'right', 'top', 'bottom') "
            },
            {
                "param": "firstTextColor",
                "desc": "код основного цвета текста [белый]"
            },
            {
                "param": "secondTextColor",
                "desc": "код второго цвета текста [черный]"
            },
            {
                "param": "animTime",
                "desc": "время анимации в миллисекундах [400]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.twoSideButton({\n        selectors: '[data-elem-id=\"1599820096839\"]',    // кнопки (второй уровень)\n        firstColor: '#ff0000',              // основной цвет фона\n        secondColor: '#0000ff',            // второй цвет фона\n        whereTo: 'left',                // направление смены цвета\n        firstTextColor: '#0000ff',         // основной цвет текста\n        secondTextColor: '#ff0000',         // второй цвет текста\n        animTime: 400,                  // время анимации (в миллисекундах)\n        minWidth: 1200                  // минимальная ширина экрана для анимации\n    });\n</script>"
    },
    {
        "id": "circle-button",
        "name": "Кнопка в кружок",
        "description": "По наведению на кнопку ее фон отъезжает вправо в кружок, а надпись – влево.",
        "tags": ["hover", "кнопки"],
        "price": 800,
        "video": "https://youtu.be/24wSbvSUgaE",
        "prep": "в Тильде нужно добавить кнопку.",
        "params": [
            {
                "param": "selector",
                "desc": "селектор кнопки "
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.buttonToCircle({\n        selector: '[data-elem-id=\"123123\"]',      // селектор кнопки\n        minWidth: 1200                            // минимальная ширина экрана\n    });\n</script>"
    },
    {
        "id": "circle-bg-button",
        "name": "Заполнение фона кнопки",
        "description": "По наведению на кнопку ее фон заполняется кругом другого цвета.",
        "tags": ["hover", "кнопки"],
        "price": 800,
        "video": "https://youtu.be/mN1z0h9WuDM",
        "prep": "в Тильде нужно добавить кнопку.",
        "params": [
            {
                "param": "button",
                "desc": "селектор кнопки"
            },
            {
                "param": "circleColor",
                "desc": "заполняющий цвет [белый]"
            },
            {
                "param": "textColor",
                "desc": "цвет текста кнопки при заполнении [черный]"
            },
            {
                "param": "easeTime",
                "desc": "время анимации [0.5]"
            },
            {
                "param": "easeFunction",
                "desc": "кривая безье анимации [ease-out]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            }
        ],
        "code": "<script>\n    fishkey.circleBg({\n        button: '[data-elem-id=\"1615480829678\"]',   // селектор кнопки\n        circleColor: '#FFFFFF',                     // заполняющий цвет\n        textColor: '#000000',                       // цвет текста при заполнении\n        easeTime: 0.5,                              // время анимации\n        easeFunction: '',                           // кривая безье анимации\n        minWidth: 1200                              // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "running-line-button",
        "name": "Бегущая строка в кнопке",
        "description": "По наведению на кнопку ее текст заменяется на бегущую строку.",
        "tags": ["курсор"],
        "price": 800,
        "video": "https://youtu.be/ic8Lk5pxe_I",
        "prep": "в Тильде нужно добавить кнопку (элементом button).",
        "params": [
            {
                "param": "btn",
                "desc": "селектор кнопки"
            },
            {
                "param": "runningText",
                "desc": "текст бегущей строки [текст кнопки]"
            },
            {
                "param": "textMargin",
                "desc": "ширина промежутка между текстами в пикселях [10]"
            },
            {
                "param": "animTime",
                "desc": "время анимации [1]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [0]"
            },
            {
                "param": "rotation ",
                "desc": "наклон бегущей строки в градусах [0]"
            },
            {
                "param": "runningTextStyle",
                "desc": "дополнительные стили бегущего текста (можно оставить {}) [нет]"
            }
        ],
        "code": "<script>\n    fishkey.runningLineBtn({\n        btn: '[data-elem-id=\"1622379786844\"]',  // селектор кнопки\n        runningText: 'СВЯЗАТЬСЯ',               // бегущий текст (если не совпадает с текстом кнопки)\n        textMargin: 15,                         // ширина промежутка между текстами в пикселях\n        animTime: 1,                            // время анимации (больше время - медленнее движение)\n        minWidth: 1200,                         // минимальная ширина экрана\n        rotation: -10,                          // наклон бегущей строки в градусах\n        runningTextStyle: {                     // дополнительные стили бегущего текста\n            color: 'white',\n            'font-style': 'italic',\n        }\n    });\n</script>"
    },
    {
        "id": "cursor-change",
        "name": "Замена курсора",
        "description": "Позволяет заменить стандартный курсор на svg изображение или gif.",
        "additional": "Можно задать много состояний, соответствующих наведению на любой тип элемента (картинки, ссылки, …).\n\nСложная для настройки фишка!",
        "tags": ["курсор"],
        "price": 800,
        "video": "https://youtu.be/Y3AhsaPlOUg",
        "prep": "если в качестве какого-то из состояний курсора используется gif-изображение, нужно в любой zero-block поставить шейп с фоновой картинкой с этой gif. ",
        "params": [
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            },
            {
                "param": "numStates",
                "desc": "количество состояний курсора кроме основного [0]"
            },
            {
                "param": "hasNewNormalStyle",
                "desc": "задавать ли основное состояние вместо стандартного курсора (true / false) [false]"
            },
            {
                "param": "isCursorHidden",
                "desc": "скрывать ли стандартный курсор"
            },
            {
                "param": "hasDelay",
                "desc": "смягчать ли перемещение курсора (true / false) [false]"
            },
            {
                "param": "delaySpeed",
                "desc": "скорость курсора (если включено смещение) (0.1 – 5) [1]"
            },
            {
                "param": "sourceOfNormal",
                "desc": "источник основного состояния курсора ('external' – вставка кода векторного изображения, 'internal' – gif из тильды) ['external']"
            },
            {
                "param": "sourceOfStates",
                "desc": "источники дополнительных состояний (через запятую в своих кавычках)"
            },
            {
                "param": "normalStyle",
                "desc": "стиль обводки основного состояния (например, внешний круг вокруг векторного изображения) (смотри пункт css-стили) (можно оставить пустые {})"
            },
            {
                "param": "normalExternal",
                "desc": "код svg, если для нормального состояния задан источник 'external' (смотри пункт работа с svg)"
            },
            {
                "param": "normalInternal",
                "desc": "селектор элемента с gif, если 'internal'"
            },
            {
                "param": "triggers",
                "desc": "селекторы элементов, активирующих дополнительные состояния (через запятую в своих кавычках, в кавычках можно разные селекторы через запятую (они будут соответствовать одному состоянию)"
            },
            {
                "param": "stateStyles",
                "desc": "стили обводок дополнительных состояний (смотри пункт css-стили) (можно оставить пустые {})"
            },
            {
                "param": "statesExternal",
                "desc": "коды svg дополнительных состояний (для которых 'external'); если у этого состояния по очереди источник 'internal', можно оставить пустые кавычки (смотри пункт работа с svg)"
            },
            {
                "param": "statesInternal",
                "desc": "селекторы элементов дополнительных состояний (для которых 'internal'); если у этого состояния по очереди источник 'external', можно оставить пустые кавычки"
            }
        ],
        "code": "<script>\n    fishkey.cursorChange({                         \n        minWidth: 1200,                             // минимальная ширина экрана\n        numStates: 2,                               // количество состояний курсора кроме основного\n        hasNewNormalStyle: false,                   // заменять ли нормальное состояние (вместо курсора)\n        isCursorHidden: true,                       // прятать ли стандартный курсор\n        hasDelay: true,                             // отставание (плавное перемещение) true - есть, false - нет (опц)\n        delaySpeed: 1,                              // задержка отставания (0.1 - 5) (опц)\n        sourceOfNormal: \"external\",                 // источник нормального состояния (external - вставить код, internal - селектор элемента в тильде)\n        sourceOfStates: [                           // источники дополнительных состояний\n            \"internal\",\n            \"external\"\n        ],\n        normalStyle: {                              // стиль основного состояния\n            width: '32px',\n            height: '32px',\n            'border': '1px solid #4F4F4F',\n            'border-radius': '50%'\n        },\n        normalExternal:                             // код основного состояния (если external)\n            `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle r=\"3\" fill=\"#4F4F4F\" cx=\"16\" cy=\"16\"></circle>\n            </svg>`,\n        normalInternal: '',                         // селектор для основного состояния (если internal)\n        triggers: [                                 // элементы, активирующие дополнительные состояния\n            '[data-elem-id=\"1609162301586\"]',\n            'img'\n        ],       \n        stateStyles: [                              // стили дополнительных состояний (в количестве как в numStates)\n            {\n                width: '50px',\n                height: '50px',\n                'border': '1px solid #78ACCD',\n                'border-radius': '50%'\n            },\n            {\n                width: '50px',\n                height: '50px',\n                'border': '1px solid #78ACCD',\n                'border-radius': '50%'\n            }\n        ],\n        statesExternal: [                           // коды дополнительных состояний (если external) (в количестве как в numStates)\n            ``,                                     // здесь пропущено, так как первый sourceOfStates - internal\n            `<svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle r=\"4\" fill=\"#78ACCD\" cx=\"25\" cy=\"25\"></circle>\n            </svg>`\n        ],\n        statesInternal: [                           // коды дополнительных состояний (если internal) (в количестве как в numStates)\n            '[data-elem-id=\"1609352398417\"]',\n            ''                                      // здесь пропущено, так как второй sourceOfStates - external\n        ]\n    })\n</script>"
    },
    {
        "id": "simple-cursor",
        "name": "Конструктор курсора",
        "description": "как «замена курсора», только проще и производительнее :)",
        "additional": "Даже есть интерфейс для настройки!",
        "tags": ["cursor"],
        "price": 1500,
        "video": "",
        "prep": "мы сделали для вас интерфейс для изи-бризи-лемон-сквизи настройки курсора. Справа меняются параметры, слева выводится результирующий код для подключения фишки.\n\nА здесь есть несколько пресетных курсоров.\n\n(P.S. «Дизайнил» страницы Сережа в процессе верстки, а ему было лень, так что простите за боль в глазках.)\n\nНу а если вы слишком круты для простых путей, ниже есть обычная инструкция...",
        "params": [
            {
                "param": "activators",
                "desc": "селекторы элементов, над которыми будет меняться состояние курсора"
            },
            {
                "param": "mixBlend",
                "desc": "зависит ли цвет от фона (true - зависит, false - не зависит)"
            },
            {
                "param": "hideStd",
                "desc": "прятать ли стандартный курсор (true - прятать, false - не прятать)"
            },
            {
                "param": "items",
                "desc": "список элементов, которые будут следовать за курсором, их параметры ниже:"
            },
            {
                "param": "type",
                "desc": "форма элемента (circle - круг, rect - квадрат, triangle - треугольник)"
            },
            {
                "param": "size",
                "desc": "размер в пикселях (для круга это радиус, для квадрата и треугольника - сторона)"
            },
            {
                "param": "stroke",
                "desc": "цвет контура фигуры (чтобы его не было, можно оставить пустые скобки '')"
            },
            {
                "param": "fill",
                "desc": "заливка контура фигуры (чтобы его не было, можно оставить пустые скобки '')"
            },
            {
                "param": "strokeWidth",
                "desc": "толщина линии контура [1]"
            },
            {
                "param": "opacity",
                "desc": "непрозрачность [100]"
            },
            {
                "param": "rotation",
                "desc": "угол поворота [0]"
            },
            {
                "param": "speed",
                "desc": "скорость передвижения элемента (если поставить 0, не будет отставать от курсора; в другом случае - чем меньше число, тем меньше скорость)"
            },
            {
                "param": "isAnimated",
                "desc": "есть ли активное состояние (над активаторами)"
            },
            {
                "param": "activeStyle",
                "desc": "стили активного состояния (совпадают с аналогичными параметрами элемента)"
            }
        ],
        "code": "<script>\n    fishkey.simpleCursor({\n        activators: 'a, [data-elem-type=\"button\"], .t-zoomable',    // селекторы активаторов\n        mixBlend: true,                     // зависит ли цвет от фона (true / false)\n        hideStd: false,                     // прятать ли стандартный курсор (true / false)            \n        items: [                            // элементы курсора (для добавления новых нужно поставить запятую\n            {                               // после } и добавить такой же блок {...})\n                type: 'circle',             // форма (circle / rect / triangle)\n                size: 5,                    // размер в пикселях\n                stroke: '#ffffff',          // цвет контура (оставить '' чтобы не было контура)\n                fill: '',                   // цвет заливки (оставить '' чтобы не было заливки)\n                strokeWidth: 1,             // толщина контура\n                opacity: 100,               // непрозрачность\n                rotation: 0,                // угол поворота в градусах\n                speed: 0.01,                // скорость движения за курсором (0 - без отставания)\n                isAnimated: true,           // меняется ли состояние при наведении на активаторы\n                activeStyle: {              // стили активного состояния\n                    animationSpeed: 0.01,   // скорость анимации\n                    size: 5,                // размер в активном состоянии\n                    opacity: 100,           // непрозрачность в активном состоянии\n                    rotation: 0             // угол поворота в активном состоянии\n                }\n            }\n        ]\n    });\n</script>"
    },
    {
        "id": "cursor-trace",
        "name": "След курсора",
        "description": "Позволяет заменить курсор на кружок любого стиля и кружки для его следа.",
        "фввшешщтфд": "При перемещении курсора, основной кружок перемещается вместо курсора, а остальные оставляют его «следы», которые постепенно исчезают.",
        "tags": ["курсор"],
        "price": 800,
        "video": "https://youtu.be/f83By-NhP_k",
        "prep": "не требуется.",
        "params": [
            {
                "param": "numPoints",
                "desc": "количество точек в следе, влияет на его длину и время перемещения (100 +- 100) [50]"
            },
            {
                "param": "opacity",
                "desc": "суммарная непрозрачность неподвижного курсора [0.2]"
            },
            {
                "param": "traceDelay",
                "desc": "задержка следа (1-25) [5]"
            },
            {
                "param": "cursorStyle",
                "desc": "стиль курсора (может пригодиться пункт css-стили)"
            },
            {
                "param": "trailStyle",
                "desc": "стиль следа"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            }
        ],
        "code": "<script>\n    fishkey.cursorTrace({\n        numPoints: 50,              // количество точек в следе (влияет на длину и время перемещения)\n        opacity: 0.2,               // непрозрачность\n        traceDelay: 5,              // задержка следа (1 - 25) [5]\n        cursorStyle: {              // стиль курсора\n            r: '20',                // радиус круга\n            fill: 'none',           // цвет заливки ('none' для прозрачного круга)\n            stroke: '#000000',        // цвет обводки ('none' для прозрачной обводки)\n            'stroke-width': '1',    // толщина линии обводки\n            style: 'opacity: 1'     // дополнительные стили (смотри пункт css-стили)\n        },\n        traceStyle: {               // стиль следа\n            r: '10',\n            fill: '#ff0000',\n            stroke: 'none',\n            'stroke-width': '0'\n        },\n        minWidth: 1200              // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "cursor-tail",
        "name": "Хвост курсора",
        "description": "Позволяет заменить курсор на кружок любого стиля, при перемещении которого за ним будет тянуться «хвост».",
        "tags": ["курсор"],
        "price": 800,
        "video": "https://youtu.be/4o4igHrVOPs",
        "prep": "не требуется.",
        "params": [
            {
                "param": "color",
                "desc": "hex код цвета (с #) [красный]"
            },
            {
                "param": "radius",
                "desc": "радиус курсора в пикселях [10]"
            },
            {
                "param": "numPoints",
                "desc": "количество точек в следе, влияет на его длину и время перемещения (100 +- 100) [50]"
            },
            {
                "param": "opacity",
                "desc": "суммарная непрозрачность неподвижного курсора [0.2]"
            },
            {
                "param": "tailDelay",
                "desc": "задержка хвоста (1-25) [5]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            }
        ],
        "code": "<script>\n    fishkey.cursorTail({\n        color: '#ff0000',               // цвет\n        radius: 25,                 // радиус кружка\n        numPoints: 50,              // количество точек в хвосте (влияет на длину и время перемещения)\n        opacity: 0.2,               // непрозрачность\n        tailDelay: 5,               // задержка хвоста (1 - 25) [5]\n        minWidth: 1200              // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "cursor-mask",
        "name": "Маска курсором",
        "description": "Позволяет положить один блок под другой (и так много блоков попарно) и использовать курсор как «маску», открывающую нижний блок.",
        "tags": ["курсор"],
        "price": 800,
        "video": "https://youtu.be/8QjVwK-2FjY",
        "prep": "создаются нужные блоки.",
        "params": [
            {
                "param": "originalPages",
                "desc": "селекторы видимых блоков (в кавычках через запятую)"
            },
            {
                "param": "maskingPages",
                "desc": "скрытые блоки (в кавычках через запятую)"
            },
            {
                "param": "clipRadius",
                "desc": "радиус маски в пикселях [100]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            }
        ],
        "code": "<script>\n    fishkey.cursorMask({\n        originalPages: '#rec257385079, #rec257696327',      // показываемые блоки\n        maskingPages: '#rec257675244, #rec257696345',       // скрытые блоки\n        clipRadius: 50,                                     // радиус круга для маски\n        minWidth: 1200                                      // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "cursor-track",
        "name": "Отслеживание курсора",
        "description": "Позволяет заставить элемент «следить» за курсором, притягиваясь или поворачиваясь в его сторону.",
        "tags": ["курсор", "hover"],
        "price": 800,
        "video": "https://youtu.be/8QjVwK-2FjY",
        "prep": "создается нужный элемент. При вращении элемента он поворачивается к курсору правым краем. Ось вращения — центр элемента.\n\nЕсли вы хотите сместить ось вращения картинки (например, на левый край), загрузите картинку с пустотой (то есть левая половина картинки — прозрачная, правая — ваша картинка): таким образом ось вращения (которая все еще по центру) окажется на левом крае вашей картинки.",
        "params": [
            {
                "param": "trackElement",
                "desc": "селектор элемента"
            },
            {
                "param": "mode",
                "desc": "режим: 'shift' для сдвига, 'rotate' для вращения [сдвиг]"
            },
            {
                "param": "maxElementShift",
                "desc": "максимальный сдвиг относительно начального положения (для режима сдвиг) (в px) [50]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [1200]"
            }
        ],
        "code": "<script>\n    fishkey.mouseTrack({\n        trackElement: '[data-elem-id=\"1616681324909\"]', // селектор элемента\n        mode: \"shift\",                                  // режим: shift - сдвиг, rotate - поворот\n        maxElementShift: 20,                            // (для сдвига) максимальный сдвиг относительно начального положения\n        minWidth: 1200                                  // минимальная ширина экрана\n    });\n</script>"
    },
    {
        "id": "cursor-halo",
        "name": "Свечение вокруг курсора",
        "description": "добавляет круглый радиальный градиент вокруг курсора.",
        "tags": ["cursor"],
        "price": 500,
        "video": "https://youtu.be/-GvLKS_JRQo",
        "prep": "не требуется.",
        "params": [
            {
                "param": "color",
                "desc": "цвет градиента [желтый]"
            },
            {
                "param": "radius",
                "desc": "радиус градиента в пикселях [100]"
            },
            {
                "param": "flatRadius",
                "desc": "радиус центральной части круга с ровным цветом в процентах от общего размера [0]"
            },
            {
                "param": "startOpacity",
                "desc": "максимальная непрозрачность (по центру градиента) в процентах [50]"
            },
            {
                "param": "blur",
                "desc": "размытие в пикселях [100]"
            },
            {
                "param": "delaySpeed",
                "desc": "скорость движения градиента за курсором (оптимально — 0.1 - 5, для движения без отставания можно поставить 0) [0.5]"
            }
        ],
        "code": "<script>\n    fishkey.cursorHalo({\n        color: '#FFFF00',       // цвет\n        radius: 600,            // радиус\n        flatRadius: 0,          // радиус круга сплошного цвета\n        startOpacity: 50,       // максимальная непрозрачность (по центру) в процентах\n        blur: 100,              // размытие (в пикселях)\n        delaySpeed: 0.5         // задержка движения (оптимально 0.1 - 5) (0 - без задержки)\n    });\n</script>"
    },
    {
        "id": "uni-burger",
        "name": "Универсальный бургер",
        "description": "позволяет добавить бургер на zero-block с появлением «маской» фигуры из одной из девяти точек экрана.",
        "additional": "Фигуры: круг, прямоугольник, квадрат. Точки появления: лево-верх, центр, право-низ и т.п.",
        "tags": ["меню"],
        "price": 1000,
        "video": "https://youtu.be/RXbGPfnqjQk",
        "prep": "в Тильде создается меню в zero-block и отдельный zero-block с прозрачным фоном для иконки бургера. Если используется стандартная иконка, то в этот блок кладется шейп, размерами и положением которого определяются размер и положение иконки. Если используется кастомная иконка, кладутся два элемента, соответствующие открытому и закрытому состоянию бургера.",
        "params": [
            {
                "param": "burgerBlock",
                "desc": "id блока с меню "
            },
            {
                "param": "triggerBlock",
                "desc": "id блока с кнопкой"
            },
            {
                "param": "isTriggerCustom",
                "desc": "используется кастомная иконка (true) или стандартная (false) [стандартная]"
            },
            {
                "param": "customOn",
                "desc": "селектор иконки в закрытом состоянии"
            },
            {
                "param": "customOff",
                "desc": "селектор иконки в открытом состоянии"
            },
            {
                "param": "burgerTime",
                "desc": "время анимации появления бургера в секундах [1]"
            },
            {
                "param": "elementsTime",
                "desc": "время появления элементов меню в секундах [0.4]"
            },
            {
                "param": "verticalPosition",
                "desc": "положение по вертикали ('top', 'center', 'bottom') [верх]"
            },
            {
                "param": "horizontalPosition",
                "desc": "положение по горизонтали ('left, 'center', 'right) [лево]"
            },
            {
                "param": "burgerShape",
                "desc": "форма появления ('circle', 'square', 'rect') [круг]"
            },
            {
                "param": "triggerLineHeight",
                "desc": "толщина линий кнопки бургера в пикселях (для стандартной иконки) [2]"
            },
            {
                "param": "openTriggerColor",
                "desc": "код цвета кнопки открытого бургера (hex с #) [черный]"
            },
            {
                "param": "closedTriggerColor",
                "desc": "код цвета кнопки открытого бургера (hex с #) [черный]"
            }
        ],
        "code": "<script>\n    fishkey.uniBurger({\n        burgerBlock: '#rec234988686',                       // id блока с меню\n        triggerBlock: '#rec234988778',                      // id блока с кнопкой открытия/закрытия бургера (должен быть с прозрачным фоном)\n        isTriggerCustom: true,                              // используется кастомный бургер (true) или стандартный (false)\n        customOn: '[data-elem-id=\"1613749412521\"]',         // селектор для кастомного бургера в закрытом состоянии\n        customOff: '[data-elem-id=\"1613749404574\"]',        // селектор для кастомного бургера в открытом состоянии\n        burgerTime: 1,                                      // время появления бургера\n        elementsTime: 0.5,                                  // время появления элементов меню\n        verticalPosition: 'top',                            // положение по вертикали (top / center / bottom)\n        horizontalPosition: 'left',                         // положение по горизонтали (left / center / right)\n        burgerShape: 'circle',                              // форма выплывания (circle / square / rect)\n        triggerLineHeight: 2,                               // толщина линий кнопки бургера\n        openTriggerColor: '#000000',                        // цвет линий стандартной кнопки бургера в открытом состоянии\n        closedTriggerColor: '#000000'                       // цвет линий стандартной кнопки бургера в закрытом состоянии\n    });\n</script>"
    },
    {
        "id": "pushing-burger",
        "name": "Вытесняющий бургер",
        "description": "позволяет добавить бургер на zero-block с появлением с одной из четырех сторон (лево, верх, право, низ) с «вытеснением» контента.",
        "tags": ["меню"],
        "price": 1000,
        "video": "https://youtu.be/fuhiII8zSfo",
        "prep": "в Тильде создается меню в zero-block и отдельный zero-block с прозрачным фоном для иконки бургера. Если используется стандартная иконка, то в этот блок кладется шейп, размерами и положением которого определяются размер и положение иконки. Если используется кастомная иконка, кладутся два элемента, соответствующие открытому и закрытому состоянию бургера. Расположение элементов бургера должно соответствовать его внешнему виду (например, если он будет появляться слева с шириной 600px, нужно расположить элементы соответственно.",
        "params": [
            {
                "param": "burgerBlock",
                "desc": "id блока с меню "
            },
            {
                "param": "triggerBlock",
                "desc": "id блока с кнопкой"
            },
            {
                "param": "isTriggerCustom",
                "desc": "используется кастомная иконка (true) или стандартная (false) [стандартная]"
            },
            {
                "param": "customOn",
                "desc": "селектор иконки в закрытом состоянии"
            },
            {
                "param": "customOff",
                "desc": "селектор иконки в открытом состоянии"
            },
            {
                "param": "burgerPosition",
                "desc": "откуда появляется бургер ('top', 'right', 'bottom', 'left') [верх]"
            },
            {
                "param": "burgerWidth",
                "desc": "ширина бургера (для появления слева или справа) [ширина экрана]"
            },
            {
                "param": "triggerLineHeight",
                "desc": "толщина линий кнопки бургера в пикселях (для стандартной иконки) [2]"
            },
            {
                "param": "openTriggerColor",
                "desc": "код цвета кнопки открытого бургера (hex с #) [черный]"
            },
            {
                "param": "closedTriggerColor",
                "desc": "код цвета кнопки открытого бургера (hex с #) [черный]"
            },
            {
                "param": "easeTime",
                "desc": "время анимации появления бургера в секундах [0.8]"
            },
            {
                "param": "easeFunction",
                "desc": "кривая безье или временная функция [кастомный ease-in-out]"
            }
        ],
        "code": "<script>\n    fishkey.pushingBurger({\n        burgerBlock: '#rec252049977',                   // id блока с меню\n        triggerBlock: '#rec252376983',                  // id блока с кнопкой открытия/закрытия бургера (должен быть с прозрачным фоном)\n        isTriggerCustom: true,                          // используется кастомный бургер (true) или стандартный (false)\n        customOn: '[data-elem-id=\"1613749412521\"]',     // селектор для кастомного бургера в закрытом состоянии\n        customOff: '[data-elem-id=\"1613749404574\"]',    // селектор для кастомного бургера в открытом состоянии\n        burgerPosition: 'left',                         // положение меню (top / left / bottom / right)\n        burgerWidth: '500',                             // ширина меню (для положения слева/справа)\n        triggerLineHeight: 2,                           // толщина линий стандартной кнопки бургера\n        openTriggerColor: '#000000',                    // цвет линий стандартной кнопки бургера в открытом состоянии\n        closedTriggerColor: '#000000',                  // цвет линий стандартной кнопки бургера в закрытом состоянии\n        easeTime: 0.8,                                  // время появления\n        easeFunction: ''                                // кривая безье анимации появления (можно оставить пустым)\n    })\n</script>"
    },
    {
        "id": "hiding-header",
        "name": "Прячущийся хедер",
        "description": "позволяет добавить хедер на zero-block, который будет прилипать к верху экрана, прятаться и появляться при скролле.",
        "tags": ["hover", "текст"],
        "price": 500,
        "video": "",
        "prep": "в Тильде создается хедер в zero-block.\nЕсть возможность отображать одни элементы в изначальном и в «прилипшем» состоянии хедера. Это может быть полезно, если в изначальном состоянии фон хедера должен быть прозрачным (параметр makeTransparent: true). Для этого первым элементам (которые будут показаны в начальном состоянии и спрятаны в «прилипшем») нужно задать класс 'lose-element', а вторым (спрятанном в начальном состоянии и показанным в «прилипшем») — класс 'fixed-element'.",
        "params": [
            {
                "param": "selector",
                "desc": "id блока с хедером"
            },
            {
                "param": "showOnMouseUp",
                "desc": "показывать ли хедер при поднятии мыши наверх браузера (true - показывать, false - нет) [нет]"
            },
            {
                "param": "disableHidingOnMobile",
                "desc": "отключать ли исчезновение хедера на мобильных устройствах (без мыши) (true - отключать, false - нет) [нет]"
            },
            {
                "param": "delay",
                "desc": "задержка перед исчезновением хедера в секундах [2]"
            },
            {
                "param": "animTime",
                "desc": "время анимации (появление хедера, смена цвета и элементов) в секундых [0.25]"
            },
            {
                "param": "makeTransparent",
                "desc": "нужно ли убирать фон хедера в изначальном состоянии (true - убирать, false - нет) [нет]"
            },
            {
                "param": "top",
                "desc": "отступ от верха экрана при прилипании хедера в пикселях [0]"
            }
        ],
        "code": "<script>\n    fishkey.hidingHeader({\n        selector: '#rec401927716',          // id блока хедера\n        showOnMouseUp: true,                // показывать ли при поднятии мыши вверх браузера (true - показывать, false - нет)\n        disableHidingOnMobile: true,        // отключать ли исчезновение хедера на мобильных устройствах (без мыши)\n        delay: 1.5,                         // задержка исчезновения хедера\n        animTime: 0.25,                     // время анимации (появление хедера, смена цветов)\n        makeTransparent: true,              // нужно ли убирать фон хедера наверху сайта (true - убирать, false - нет)\n        top: 50                             // отступ от верха экрана при прилипании хедера в пикселях\n    });\n</script>"
    },
    {
        "id": "corner-photos",
        "name": "Появление фото шторкой",
        "description": "позволяет добавить появление фотографий разворачиванием при скролле.",
        "additional": "Фото могут появляться из левого верхнего угла, сверху, из правого верхнего и т.д. по всем углам и ребрам. В начальном состоянии фото может быть скрыто полностью или не полностью (тогда оно расширяется до конечного состояния).",
        "tags": ["фото"],
        "price": 800,
        "video": "https://youtu.be/khvSKkwcEeg",
        "prep": "в тильде добавляются шейпы, фонами которых ставятся нужные фотографии.",
        "params": [
            {
                "param": "photos",
                "desc": "селекторы фото (в кавычках через запятую)"
            },
            {
                "param": "transitionTime",
                "desc": "время анимации в секундах [0.5]"
            },
            {
                "param": "startPos",
                "desc": "откуда появляется фото (left-top, top, right-top, right, right-bottom, bottom, left-bottom, left) [левый верхний угол]"
            },
            {
                "param": "initialVisibility",
                "desc": "какая часть фото в % изначально видна [0]"
            },
            {
                "param": "offsets",
                "desc": "отступы от низа (или правого края) экрана в процентах [0]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [0]"
            },
            {
                "param": "isHorScroll",
                "desc": "true, если фото находятся в блоке с горизонтальным скроллом [false]"
            }
        ],
        "code": "<script>\n    fishkey.cornerPhotos({\n        photos: '[data-elem-id=\"1599909480763\"], [data-elem-id=\"1599909482345\"]',  // селекторы фото (в тильде ставить ФОНОМ ШЕЙПА, а не картинкой)\n        transitionTime: 0.5,                            // время появления фото (в секундах)\n        startPos: 'left-top',                           // откуда появляется фото (left-top, top, right-top, right, right-bottom, bottom, left-bottom, left)\n        initialVisibility: 0,                           // начальный размер видимой части фото (в процентах)\n        offsets: [20, 20],                            // отступы от низа экрана для появления (в % от высоты экрана)\n        minWidth: 1200,                                 // минимальная ширина экрана\n        isHorScroll: false                              // true, если фото находятся в блоке с горизонтальным скроллом\n    })\n</script>"
    },
    {
        "id": "video-circle",
        "name": "Видео в круге",
        "description": "позволяет обрезать вставленное видео кругом и отключить ему управление мышью.",
        "tags": ["видео"],
        "price": 500,
        "video": "https://youtu.be/J0p85A2Hgzk",
        "prep": "в Тильде добавляется блок с видео. Для наилучшей обрезки лучше «поиграть» с размерами – чтобы влезал весь необходимый контент. Если видео проигрывается автоматически (autoplay), можно задать noClick: true, однако надо учитывать, что браузеры могут запрещать автоматическое воспроизведение видео со звуком (можно поставить mute, если звук не важен).",
        "params": [
            {
                "param": "videos",
                "desc": "селекторы блоков с видео (в кавычках через запятую)"
            },
            {
                "param": "autoSize",
                "desc": "автоматический расчет диаметра круга (true / false) [true]"
            },
            {
                "param": "circleDiams",
                "desc": "диаметры кругов при отключенном авторазмере в пикселях"
            },
            {
                "param": "hasClick",
                "desc": "реагирует ли видео на курсор (наведение, клик)"
            }
        ],
        "code": "<script>\n    fishkey.videoCircle({\n        videos: '[data-elem-id=\"1604157565601\"], [data-elem-id=\"1604157998509\"]',   // блоки с видео\n        autoSize: false,                                                            // авторазмер кружков (true / false)\n        circleDiams: ['200', '100'],                                                // размеры кружков (если авторазмер отключен)\n        hasClick: false                                                             // реагирует ли на курсор (false - нет, true - да)                                                            // реагирует ли на курсор\n    });\n</script>"
    },
    {
        "id": "vector-mask",
        "name": "Маска вектором",
        "description": "позволяет обрезать видео векторным изображением",
        "additional": "в Safari не работает :( Можно воспользоваться фишкой «Смена элементов в разных браузерах».",
        "tags": ["видео"],
        "price": 300,
        "video": "https://youtu.be/Biw4JiRuV3A",
        "prep": "в Тильде добавляется элемент с видео и элемент с кодом html. В html элемент вставляется код svg вашего векторного изображения. Ширина этого элемента должна максимально точно совпадать с шириной вектора (если вы сделали его в Фигме, и она сказала «ширина 930px», то и ширину элемента html для десктопа надо задать 930px.\nДля адаптации можно менять ширину элемента html: размер вектора будет меняться пропорционально.",
        "params": [
            {
                "param": "maskSelector",
                "desc": "селектор элемента html с кодом векторного изображения"
            },
            {
                "param": "videoSelector",
                "desc": "селектор обрезаемого элемента (например, с видео)"
            }
        ],
        "code": "<script>\n    fishkey.clipBySvg({\n        maskSelector: '[data-elem-id=\"1635600501065\"]',     // селектор элемента html\n        videoSelector: '[data-elem-id=\"1635594874337\"]'     // селектор обрезаемого элемента\n    });\n</script>"
    },
    {
        "id": "photo-scroll",
        "name": "Параллакс фото по скроллу",
        "description": "при скролле фото будут перемещаться по вертикали в своих пределах относительно текущего положения фото на экране.",
        "tags": ["фото", "скролл"],
        "price": 800,
        "video": "https://youtu.be/o3OLq79-CJQ",
        "prep": "в Тильде добавляются шейпы с нужными картинками (можно использовать и элементы картинкок, но нужно отключить им lazy-load). Для правильной рабоыт фишки картинки будут масштабироваться (в соответствии с параметром maxShift), так что может иметь смысл изначально сделать картинку с запасом (чтобы ее основная часть точно была видна).\nДля удобства настройки фишки можно задать им всем одинаковый класс.",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы элементов с картинками"
            },
            {
                "param": "maxShift",
                "desc": "максимальный сдвиг изображения в процентах от его высоты [30]"
            },
            {
                "param": "direction",
                "desc": "направление сдвига ('to bottom' — вниз, 'to top' — вверх) [вниз]"
            }
        ],
        "code": "<script>\n    fishkey.photoScroll({\n        selectors: '[data-elem-id=\"1638000173338\"], [data-elem-id=\"1638000173338\"]',     // селекторы элементов\n        maxShift: 40,                       // максимальный сдвиг в процентах от высоты элемента [30]\n        direction: 'to bottom'              // направление сдвига ('to bottom' - вниз, 'to top' - вверх) [вниз]\n    });\n</script>"
    },
    {
        "id": "text-appear",
        "name": "Появление снизу",
        "description": "позволяет добавить появление текста снизу по букве, слову, предложению или строке.",
        "tags": ["текст"],
        "price": 500,
        "video": "https://youtu.be/7ZH3ewxcKpc",
        "prep": "в Тильде создается текстовый элемент (лучше – в одну строку). Если будет настроено появление по строке, в конце каждой строки нужно поставить ';;''.",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы текстовых элементов (в кавычках через запятую)"
            },
            {
                "param": "trigger",
                "desc": "триггер анимации ('scroll' или 'hover')"
            },
            {
                "param": "triggerBlocks",
                "desc": "селекторы триггеров (если анимация по наведению на другой элемент) [по наведению на саму надпись]"
            },
            {
                "param": "isHiddenByDefault",
                "desc": "спрятана ли надпись (true) или показана, но обновляется при наведении (false) [спрятана]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "animSpeed",
                "desc": "скорость появления элемента в миллисекундах [400]"
            },
            {
                "param": "wordSpeed",
                "desc": "задержка между появлением элементов в миллисекундах [50]"
            },
            {
                "param": "spacing",
                "desc": "зазор снизу в px (нужно увеличить, если будут обрезаться «хвосты» букв) [0px]"
            },
            {
                "param": "offsets",
                "desc": "отступы от низа экрана для анимации по скроллу"
            },
            {
                "param": "divider",
                "desc": "разделитель ('s для появления по символу, 'w по слову, 'p' по предложению (через точку), 'l' по строке (через ';;'))"
            }
        ],
        "code": "<script>\n    fishkey.textApp({\n        selectors: '[data-elem-id=\"123\"], [data-elem-id=\"456\"]',     // селекторы заголовков\n        trigger: 'scroll',                                  // триггер анимации ( scroll / hover )\n        triggerBlocks: '[data-elem-id=\"789\"], [data-elem-id=\"101\"]',     // селекторы триггеров (если анимация по наведению на другие блоки)\n        isHiddenByDefault: true,                            // спрятана ли надпись\n        minWidth: 640,                                      // минимальная ширина экрана для анимации\n        animSpeed: 400,                                     // скорость появления всего заголовка\n        wordSpeed: 50,                                      // задержка между словами / символами / ...\n        spacing: '5',                                       //зазор снизу в px (можно оставить '')\n        offsets: [50, 50],                                  // отступы от низа экрана для появления (в % от высоты экрана)\n        divider: 'w'                                        // разделитель: 's' для появления по символу, 'w' по слову,  \n    })                                                      // 'p' по предложению (через точку), 'l' по строке (через ;;)\n</script>"
    },
    {
        "id": "typewriter",
        "name": "Пишущая машинка",
        "description": "позволяет добавить появление текста в виде печатной машинки.",
        "tags": ["текст"],
        "price": 500,
        "video": "https://youtu.be/0NLslRZbOnY",
        "prep": "в Тильде создается текстовый элемент, выравнивание текста в нём определяет, как будет появляться текст (слева направо, центрированно, справа налево).",
        "params": [
            {
                "param": "selector",
                "desc": "селектор текстового элемента"
            },
            {
                "param": "totalSpeed",
                "desc": "время появления всего текста в миллисекундах [2000]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "offset",
                "desc": "отступ от низа экрана для анимации [0]"
            }
        ],
        "code": "<script>\n    fishkey.typeWriter({\n        selector: '[data-elem-id=\"1470210011265\"]',     // селектор\n        totalSpeed: '4000',                             // время появления всего текста\n        minWidth: '1200',                               // минимальная ширина экрана для анимации\n        offset: 40                                      // отступ от низа экрана для анимации (в % от высоты экрана)\n    });\n</script>"
    },
    {
        "id": "letters-appear",
        "name": "Выплывание букв",
        "description": "позволяет добавить появление текста по буквам. Появление может быть по порядку или рандомно.",
        "tags": ["hover", "текст"],
        "price": 500,
        "video": "https://youtu.be/sbis-BMuwtc",
        "prep": "в Тильде создается текстовый элемент.",
        "params": [
            {
                "param": "selector",
                "desc": "селектор текстового элемента"
            },
            {
                "param": "lettersSpeed",
                "desc": "время появления буквы в секундах [2]"
            },
            {
                "param": "totalSpeed",
                "desc": "время появления всего текста в секундах [3]"
            },
            {
                "param": "isRandom",
                "desc": "появление по порядку или рандомно [по порядку]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "offset",
                "desc": "отступ от низа экрана для анимации [0]"
            },
            {
                "param": "delay",
                "desc": "задержка появления в секундах (для появления сразу на экране) [0]"
            }
        ],
        "code": "<script>\n    fishkey.lettersAppear({\n        selector: '[data-elem-id=\"1470209944682\"]',     // селектор\n        letterSpeed: 2,                                 // время появления буквы\n        totalSpeed: 3,                                  // время всей анимации\n        isRandom: true,                                 // рандомно (true) или по порядку (false)\n        minWidth: 1200,                                 // минимальная ширина экрана для анимации\n        offset: 50,                                     // отступ от низа экрана для анимации (в % от высоты экрана)\n        delay: 0                                        // задержка появления (для появления без отступа)\n    })\n</script>"
    },
    {
        "id": "text-wrap",
        "name": "Скрытие части текста",
        "description": "позволяет обрезать большой тестовый элемент до нескольких первых строк и добавить триггер для его показа и скрытия.",
        "additional": "Не влияет на позиционирование элементов под текстом!",
        "tags": ["текст"],
        "price": 500,
        "video": "https://youtu.be/Xv3d8mHdqCM",
        "prep": "в Тильде создается текстовый элемент и элемент для триггера (если триггером будет отдельный элемент, а не сам текст).",
        "params": [
            {
                "param": "text",
                "desc": "селектор элемента с текстом"
            },
            {
                "param": "trigger",
                "desc": "селектор триггера (если триггером будет выступать сам текст, можно удалить содержимое кавычек или всю строку)"
            },
            {
                "param": "isTriggerMoving",
                "desc": "будет ли триггер двигаться вместе с обрезкой текста [нет]"
            },
            {
                "param": "isTriggerFlipping",
                "desc": "будет ли триггер переворачиваться в разных состояниях [нет]"
            },
            {
                "param": "numLines",
                "desc": "число видимых строк для разных экранов без кавычек (если для конкретного разрешения число строк совпадает с большим разрешением, можно поставить в нем пустые кавычки ' ' или удалить эту строку; если для всех экранов число строк одинаково, можно вместо всего блока {...} поставить нужное число) [3]"
            },
            {
                "param": "animTime",
                "desc": "время анимации в секундах [0.5]"
            },
            {
                "param": "animFunction",
                "desc": "кривая безье или временная функция [ease-in-out]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            }
        ],
        "code": "<script>\n    fishkey.textWrap({\n        text: '[data-elem-id=\"1470210011265\"]',     // селектор элемента с текстом\n        trigger: '[data-elem-id=\"1619021953883\"]',  // селектор триггера (пустые скобки или удалить строку, если триггер - сам текст)\n        isTriggerMoving: true,                      // будет ли триггер двигаться вместе с обрезкой текста\n        isTriggerFlipping: false,                   // будет ли триггер переворачиваться в разных состояниях\n        numLines: {                                 // число видимых строк для разных экранов (если как на бОльшем экране - 0,\n            \"1200\": 5,                              // если для всех экранов одинаково - можно заменить {...} на число)\n            \"980\": '',\n            \"640\": '',\n            \"480\": 3,\n            \"320\": ''\n        },\n        animTime: 0.8,                              // время анимации\n        animFunction: 'ease',                       // кривая безье анимации\n        minWidth: 0                                 // миинимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "bg-noise",
        "name": "Анимация шума",
        "description": "позволяет добавить шум на фон всей страницы",
        "tags": ["фон"],
        "price": 500,
        "video": "https://youtu.be/S6Dsq9pe8L4",
        "prep": "Для стандартного шума не требуется. Для кастомного: в Тильде нужно создать отдельный zero-block, добавить в него шейп и установить шейпу background image с гифкой шума. Чем больше картинка шума, тем лучше. Шейп лучше растянуть до размеров картинки (например, 1000х500 пикселей).",
        "params": [
            {
                "param": "isNoiseDefault",
                "desc": "использовать стандартный шум (true) или кастомный (false)"
            },
            {
                "param": "selector",
                "desc": "id блока, в котором лежит шум"
            },
            {
                "param": "opacity",
                "desc": "непрозрачность шума в процентах [5]"
            },
            {
                "param": "grain",
                "desc": "зерно (чем больше цифра относительно размера гифки, тем больше зерно) [auto]"
            },
            {
                "param": "isCovering",
                "desc": "положение шума: true, если поверх всего, false, если на фоне [false]"
            }
        ],
        "code": "<script>\n    fishkey.bgNoise({\n        isNoiseDefault: true,           // использовать стандартный шум (true) или кастомный (false)\n        selector: '#rec239137295',      // id блока, в котором лежит элемент с шумом (для кастомного)\n        opacity: 15,                    // непрозрачность\n        grain: '',                      // размер шума (можно оставить пустым) больше px -> больше зерна\n        isCovering: true                // true, если шум поверх всего, иначе false\n    });\n</script>"
    },
    {
        "id": "bg-change",
        "name": "Смена фона",
        "description": "позволяет добавить смену фона всей страницы по скроллу до определенного места.",
        "tags": ["фон"],
        "price": 500,
        "video": "https://youtu.be/sNSSsXz0-GM",
        "prep": "во всех блоках убирается фон",
        "params": [
            {
                "param": "colors",
                "desc": "hex коды цветов (с #)"
            },
            {
                "param": "breakpointBlocks",
                "desc": "id блоков, по скроллу до которых будет меняться фон (на 1 меньше количества цветов)"
            },
            {
                "param": "offsets",
                "desc": "отступы от низа экрана до указанных блоков в % от высоты экрана (по количеству блоков для переключеия) [0]"
            },
            {
                "param": "animTime",
                "desc": "время переключения [0.5]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана [0]"
            }
        ],
        "code": "<script>\n   fishkey.bgChange({\n       colors: [                    // коды цветов\n            '#000000',\n            '#FF0000',\n            '#00FF00'\n        ],\n        breakpointBlocks: [         // блоки, при появлении которых будут сменяться цвета\n            '#rec265281254',\n            '#rec265281255',\n            '#rec265281258'\n        ],\n        offsets: [                  // отступы от веръа экрана для смены цвета (в % от высоты экрана)\n            10,\n            20,\n            30\n        ],\n        animTime: 0.5,              // время анимации\n        minWidth: 0                 // минимальная ширина экрана\n   })\n</script>"
    },
    {
        "id": "mesh-gradient-bg",
        "name": "Динамический меш-градиент",
        "description": "позволяет добавить на фон меш-градиент, который будет шевелиться при движении мыши.",
        "tags": ["фон"],
        "price": 2000,
        "video": "",
        "prep": "на сайте meshgradient.com создается нужный градиент. Двигаться с курсором будет последняя добавленная точка. Если вы хотите, чтобы градиент был виден только на некоторых блоках (на меньшей их части), им надо удалить фон.\nДля ускорения загрузки эта фишка вынесена в отдельный модуль, поэтому она не требует подключения основной библиотеки, а коды ее настройки должны находиться в САМОМ НАЧАЛЕ страницы (можно поместить в хедер или в HEAD сайта).\nНа мобильных устройствах фишка не включается для расширенной поддержки и избежания багов. Вместо этого можно задать URL картинки, которая будет использоваться как статичный фон для всего сайта (смотри тут как использовать загруженную на тильду картинку) или общий цвет фона. Если картинка или цвет не заданы, фоны блоков не будут удаляться (то есть можно задавать фоны в них).",
        "params": [
            {
                "param": "meshgradURL",
                "desc": "ссылка на настроенный градиент на сайте meshgradient.com (адрес страницы после настройки фишки)"
            },
            {
                "param": "initialTarget",
                "desc": "координаты начального движения градиента в формате [x, y]. Центр координат — середина экрана, то есть верхняя левая точка имеет координату [-1, 1], нижняя правая: [1, -1]. Если движение не нужно, можно удалить содержимое скобок [...]"
            },
            {
                "param": "coeff",
                "desc": "скорость движения градиента [1]"
            },
            {
                "param": "removeBgs",
                "desc": "убирать ли фоны всех блоков на сайте (true - убирать, false - нет) [нет]"
            },
            {
                "param": "exceptions",
                "desc": "если убирать все фоны, можно добавить исключения (id блоков, у которых не убирать)"
            },
            {
                "param": "defaultImgUrl",
                "desc": "URL картинки, которая будет использована вместо градиента на мобильных устройствах"
            },
            {
                "param": "defaultBgColor",
                "desc": "HEX код цвета, который будет использован вместо градиента на мобильных устройствах (если не задана картинка defaultImgUrl)"
            }
        ],
        "code": "<script>\n    fishkey.meshGradientBg({\n        meshgradURL: 'https://meshgradient.com/?w=eyJzIjpbWy0wLjg1LC0wLjldLFstMC45MjYsMC45MzNdLFswLjg1LC0wLjldLFswLjk1LDAuOV0sWzAuNTExLDAuNDI5XV0sImQiOltbLTAuOTgsLTAuOTg0XSxbLTAuOTg2LDAuOTg2XSxbMC45ODgsLTAuOTk3XSxbMC45ODksMC45ODhdLFswLjY2OSwwLjUyMl1dLCJwIjo1fQ%3D%3D&c=eyJ0bCI6IiM5NGZmZWIiLCJ0ciI6IiNmZmQ1ODAiLCJibCI6IiNmZmY0YjgiLCJiciI6IiNiZGZmYzMifQ%3D%3D',\n        initialTarget: [-1, 0],                     // координата начального движения градиента в формате [x, y]\n        coeff: 2,                                   // коэффициент скорости движения градиента\n        removeBgs: true,                            // убирать ли фоны у всех блоков\n        exceptions: '#rec403121619, #rec32564314',  // если убирать, то здесь можно добавить Id блоков, у которых убирать не надо\n        defaultImgUrl: '',                          // ссылка на картинку, которая будет использоваться как фон на мобильных устройствах\n        defaultBgColor: '#FFD580'                   // цвет фона для мобильных устройств\n    });\n</script>"
    },
    {
        "id": "vector-draw",
        "name": "Вырисовка вектора",
        "description": "позволяет вставить несколько векторных изображений, нарисованных одной линией, и анимировать их появление в виде вырисовки.",
        "additional": "Триггеру для вырисовки может быть наведение на какой-либо элемент (один для каждого вектора) или скролл до этого вектора.",
        "tags": ["вектор"],
        "price": 500,
        "video": "https://youtu.be/-8H7cNAU0xk",
        "prep": "в Тильде нужно поставить любые элементы (нагляднее – эти же картинки) в то место, куда будет вставляться вектор.",
        "params": [
            {
                "param": "selectors",
                "desc": "селекторы элементов, куда будут вставляться изображения (в кавычках через запятую)"
            },
            {
                "param": "svgs",
                "desc": "коды векторных изображений (см. пункт работа с svg) (каждый в своих кавычках, кавычки через запятую)"
            },
            {
                "param": "strokeWidth",
                "desc": "толщина линии в пикселях [0.5]"
            },
            {
                "param": "animTime",
                "desc": "время анимации в секундах [0.5]"
            },
            {
                "param": "animFunction",
                "desc": "кривая безье или временная функция [ease] "
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "trigger",
                "desc": "триггер анимации ('scroll' или 'hover')"
            },
            {
                "param": "hoverTriggers",
                "desc": "селекторы триггеров (при анимации по ховеру) (каждый в своих кавычках, кавычки через запятую)"
            },
            {
                "param": "offsets",
                "desc": "отступы от низа экрана в процентах от высоты экрана (при анимации по скроллу)"
            }
        ],
        "code": "<script>\n    fishkey.vectorDraw({\n        selectors: '[data-elem-id=\"1606915054502\"], [data-elem-id=\"1606917547773\"]',            // селекторы элементов для векторов\n        svgs: [                                                                                 // векторы\n            `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M99.5 50C99.5 77.3381 77.3381 99.5 50 99.5C22.6619 99.5 0.5 77.3381 0.5 50C0.5 22.6619 22.6619 0.5 50 0.5C77.3381 0.5 99.5 22.6619 99.5 50Z\" stroke=\"black\"/>\n            </svg>`,                                                                     // svg\n            `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M99.5 50C99.5 77.3381 77.3381 99.5 50 99.5C22.6619 99.5 0.5 77.3381 0.5 50C0.5 22.6619 22.6619 0.5 50 0.5C77.3381 0.5 99.5 22.6619 99.5 50Z\" stroke=\"black\"/>\n            </svg>`,\n        ],\n        strokeWidth: 1,                             // толщина линии (в px)\n        animTime: 0.5,                              // время анимации\n        animFunction: 'ease',                       // кривая безье анимации (можно оставить пустым)\n        minWidth: 1200,                             // минимальная ширина экрана для анимации\n        trigger: 'scroll',                          // триггер (scroll / hover)\n        hoverTriggers: [                            // селекторы триггеров (если hover)\n            '[data-elem-id=\"1606915059508\"]',\n            '[data-elem-id=\"1606917547804\"]',\n        ],\n        offsets: [                                  // отступы от низа экрана (если scroll) (в % от высоты экрана)\n            20, 20\n        ]\n    });\n</script>"
    },
    {
        "id": "vector-write",
        "name": "Вырисовка надписи вектором",
        "description": "позволяет вставить векторное изображение надписи (а-ля рукописной) и анимировать его вырисовку при появлении на экране.",
        "tags": ["вектор"],
        "price": 800,
        "video": "https://youtu.be/B719IaorYJ0",
        "prep": "в Тильде нужно поставить любой элемент (нагляднее – эту же картинку) в то место, куда будет вставляться вектор.",
        "params": [
            {
                "param": "selector",
                "desc": "селекторы элементов, куда будет вставляться надпись"
            },
            {
                "param": "svg",
                "desc": "код векторного изображения (см. пункт работа с svg)"
            },
            {
                "param": "animTime",
                "desc": "время анимации в секундах [0.5]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "offset",
                "desc": "отступ от низа экрана в процентах от высоты экрана [0]"
            },
            {
                "param": "strokeWidth",
                "desc": "толщина линии контура в пикселях [0.5]"
            }
        ],
        "code": "<script>\n    fishkey.vectorWrite({\n        selector: `[data-elem-id=\"1606811783003\"]`,     // куда вставлять надпись\n        svg: ``,                                        // код svg-изображения\n        animTime: 2,                                    // время анимации\n        minWidth: 1200,                                 // минимальная ширина экрана для анимации\n        offset: 20,                                     // отступ от низа экрана (в % от высоты экрана)\n        strokeWidth: 1                                  // толщина линии вырисовки в пикселях\n    });\n</script>"
    },
    {
        "id": "move-along-the-path",
        "name": "Движение элемента по пути",
        "description": "позволяет задать движение любого элемента по пути, нарисованному векторным элементом.",
        "additional": "не работает в Safari и Internet Explorer. Лучше использовать вместе с фишкой «Смена элементов в разных браузерах»",
        "tags": ["вектор", "скролл"],
        "price": 800,
        "video": "https://youtu.be/g8viK_Mu3hA",
        "prep": "в Тильде добавляется элемент, который будет двигаться по пути. Если это картинка, то ее лучше добавлять как фон шейпа. В любом редакторе (например, в фигме), пером рисуется линия, по которой должен двигаться элемент. Из кода svg этой линии нужно получить код пути (атрибут «d» элемента «path») (см. пункт путь из svg).",
        "params": [
            {
                "param": "elem",
                "desc": "селектор движущегося элемента"
            },
            {
                "param": "paths",
                "desc": "пути для движения для разных разрешений экранов (некоторые можно пропустить, тогда будет использоваться путь следующего по величине экрана и так до самого большого) (см. пункт путь из svg)"
            },
            {
                "param": "isRotating",
                "desc": "будет ли элемент поворачиваться вдоль пути (true) или нет (false) [не будет]"
            },
            {
                "param": "isContinious",
                "desc": "движение привязано к скроллу (true) или происходит автоматически (false) [автоматически]"
            },
            {
                "param": "easeTime",
                "desc": "время анимации при автоматическом движении в секундах [0.5]"
            },
            {
                "param": "easeFunction",
                "desc": "кривая безье при автоматическом движении [ease-in-out]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "offset",
                "desc": "отступ от низа экрана в процентах от высоты экрана [0]"
            },
            {
                "param": "activeHeight",
                "desc": "за какое расстояние скролла (в px) элемент проходит от 0 до 100% пути"
            },
            {
                "param": "isSmooth",
                "desc": "сглаживать ли движение при его привязке к скроллу [нет]"
            },
            {
                "param": "delaySpeed",
                "desc": "скорость движения при задержке (0.05 - 5) [1]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            }
        ],
        "code": "<script>\n     fishkey.moveAlongThePath({\n         elem: '[data-elem-id=\"1470210224069\"]',    // элемент, который будет передвигаться\n         paths: {                                   // путb для движения для разных экранов\n             \"1200\": 'M411.5 0.5C242.833 3 -72.3 30.7 16.5 121.5C127.5 235 443.5 115.5 421.5 210C399.5 304.5 172 233.5 164.5 311',\n             \"980\": 'M200.5 1C22 60.5 -18 84 9.00002 112C36 140 205 139.5 164.5 178.5C124 217.5 24.5 257 27.5 313.5',\n             \"640\": '',\n             \"480\": 'M79.0141 1C48.0141 23.1667 -10.5859 76.4 3.0141 112C20.0141 156.5 105.514 174.5 95.5141 207.5C85.5141 240.5 37.5141 257.5 35.5141 300',\n             \"320\": ''\n         },\n         isRotating: false,                         // будет ли элемент поворачиваться вдоль пути (true) или нет (false)\n         isContinious: true,                        // движение привязано к скроллу (true) или происходит автоматически (false)\n         easeTime: 0.5,                             // время анимации при автоматическом движении\n         easeFunction: 'linear',                    // кривая безье при автоматическом движении\n         offset: 50,                                // отступ от низа экрана для начала движения в % от высоты экрана\n         activeHeight: 1000,                        // за какое расстояние скролла (в px) элемент проходит от 0 до 100% пути\n         isSmooth: true,                            // сглаживать ли движение при его привязке к скроллу\n         delaySpeed: 1,                             // скорость движения при задержке (0.05 - 5)\n         minWidth: 1200                             // минимальная ширина экрана\n     });\n</script>"
    },
    {
        "id": "text-along-the-path",
        "name": "Движение текста по пути",
        "description": "позволяет сделать бегущую строку по произвольному пути",
        "tags": ["вектор"],
        "price": 500,
        "video": "https://youtu.be/ZzuJpdsD1cc",
        "prep": "в Тильде добавляется текстовый элемент, который будет основой для текста (из него возьмется сам текст и его стили). Также добавляется любой элемент (предпочтительно - шейп), который будет задавать расположение и размер svg (размер задается по ширине этого элемента).\nВ любом редакторе (например, в фигме) пером рисуется линия, по которой должен двигаться элемент.\n\nEсли вы располагаете бегущий текст на всю ширину экрана, лучше задать шейпу ширину чуть больше 100% (например 105%) и отрицательный отступ по оси Х (например, -2.5%). Так движение будет более плавным, так как не будет видно исчезание и появление букв на краях.",
        "params": [
            {
                "param": "reference",
                "desc": "селектор текстового элемента"
            },
            {
                "param": "renderTo",
                "desc": "селектор элемента, куда будет вставлен svg с текстом"
            },
            {
                "param": "svg",
                "desc": "код svg для задания пути (см. пункт работа с svg)"
            },
            {
                "param": "direction",
                "desc": "направление движения текста (left - налево, все остальное - направо) [направо]"
            },
            {
                "param": "speedCoeff",
                "desc": "скорость движения текста (0.1 - 4) [1] - зависит от ресурсов компьютера пользователя, чтобы не тормозить остальной сайт"
            },
            {
                "param": "separate",
                "desc": "разделять ли копии текста пробелами (true - разделять, false - нет) [не разделять]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [0]"
            },
            {
                "param": "maxWidth",
                "desc": "максимальная ширина экрана для анимации [любая]"
            }
        ],
        "code": "<script>\n    fishkey.textAlongThePath({\n        reference: '[data-elem-id=\"1470209944682\"]',    // текстовый элемент\n        renderTo: '[data-elem-id=\"1637657777956\"]',     // элемент куда все будет вставляться\n        svg: `<svg width=\"1374\" height=\"245\" viewBox=\"0 0 1374 245\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M0.5 209.5C189.667 222.167 588.7 239.9 671.5 209.5C775 171.5 782 115.5 762 76C742 36.5 712 -0.999973 648 1.50003C584 4.00003 473 57 488.5 118C504 179 737.5 245 830 243.5C904 242.3 1223.17 196.667 1373.5 174\" stroke=\"black\"/>\n            </svg>`,\n        direction: 'left',  // направление движения (left - налево, остальное - направо) [направо]\n        speedCoeff: 0.5,    // скорость движения (0.1 - 4) [1]\n        separate: true,     // разделять ли копии текста пробелами [false]\n        minWidth: 0,        // минимальная ширина экрана для анимации [0]\n        maxWidth: 2000,     // максимальная ширина экрана для анимации [любая]\n    });\n</script>"
    },
    {
        "id": "dark-mode",
        "name": "Тёмная тема",
        "description": "позволяет добавить темную тему для всей страницы",
        "additional": "Можно и не светлую/темную, а просто разные первую/вторую, кто вас останавливает...",
        "tags": ["hover", "текст"],
        "price": 1500,
        "video": "",
        "prep": "для переключения тем используются один или два элемента-триггера: это могут быть любые элементы, которым задаются следующие классы:\n· если он один, класс 'common-trigger';\n· если их два, классы 'light-trigger' (будет виден в светлой теме) и 'dark-trigger' (виден в темной).\nЕсли какие-то элементы должны быть видны только в светлой или только в темной теме, им задаются классы 'light-mode' или 'dark-mode' соответственно.",
        "helpers": [
            "Режимы работы:\n· negative: просто инвертирует все цвета на сайте. Простой и удобный, если у вас на сайте нет картинок. Если они есть - тоже инвертируются, что может быть не хорошо :(\n· auto: меняет цвета, используя заданную цветовую схему (об ее задании — дальше)\n· manual: переключает элементы с классами 'light-trigger' и 'dark-trigger'",
            "Задание цветовой схемы:\nЦветовая схема указывает, какие цвета менять на какие. Каждый пункт схемы (содержимое фигурных скобок {...}) задает одно правило.\n· type: для какого цвета применимо данное правило: color — цвета текстов, backgroundColor — цвета фонов (как блоков, так и элементов shape), borderColor — цвета обводок элементов.\n· light: цвет в светлой теме (должен точно соответствовать начальному цвету)\n· light: цвет в темной теме\nЕсли правила для одинаковых типов содержат одинаковые цвета для одной темы, но разные для другой (например, один текст (type: color) имеет цвета #000000 в светлой теме и #FFFFFF в темной, а другой — #000000 в светлой и #AAAAAA в темной), один из одинаковых цветов (#000000 в данном случае) надо заменить на аналогичный, но отличающийся (например, #010101). Они будут неотличимы для пользователя, зато скрипт сможет увидеть разницу :)"
        ],
        "params": [
            {
                "param": "type",
                "desc": "режим работы (negative, auto, manual) [manual]"
            },
            {
                "param": "transitionTime",
                "desc": "время анимации смены темы в секундах [0]"
            },
            {
                "param": "scheme",
                "desc": "цветовая схема (для режима auto, для остальных можно игнорировать)"
            }
        ],
        "code": "<script>\n    fishkey.darkMode({\n        type: 'auto',               // режим работы (negative, auto, manual)\n        transitionTime: 0.5,        // время переключения\n        scheme: [                   // цветовые схемы (для режима auto)\n            {\n                type: 'color',      // тип изменяемого цвета (color / backgroundColor / borderColor)\n                light: '#0D0D0D',   // цвет при светлой теме\n                dark: '#F0EEEC',    // цвет при темной теме\n            },\n            {\n                type: 'color',\n                light: '#4F4F4F',\n                dark: '#F0EEEB',\n            },\n            {\n                type: 'backgroundColor',\n                light: '#F0EEEC',\n                dark: '#181818',\n            },\n            {\n                type: 'borderColor',\n                light: '#4F4F4F',\n                dark: '#F0EEEB',\n            },\n        ],\n    });\n</script>"
    },
    {
        "id": "photo-link",
        "name": "Переход на страницы по картинке",
        "description": "позволяет добавить переход на страницы по ссылкам на картинках «расплыванием» этих картинок на весь экран.",
        "tags": ["другое", "ссылки"],
        "price": 600,
        "video": "https://youtu.be/1V6YWVUMWAs",
        "prep": "в Тильде добавляется фотографии, на них ставятся ссылки на нужные страницы.",
        "params": [
            {
                "param": "photos",
                "desc": "селекторы фотографий"
            },
            {
                "param": "newTab",
                "desc": "открывать ли страницы в новой вкладке (true / false) [false]"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации"
            }
        ],
        "code": "<script>\n    fishkey.photoLink({\n        photos: [                                     // селекторы для картинок\n            '[data-elem-id=\"1597517665515\"]', \n            '[data-elem-id=\"1597517538462\"]', \n            '[data-elem-id=\"1597517563533\"]', \n            '[data-elem-id=\"1597517554689\"]', \n            '[data-elem-id=\"1597517468000\"]', \n            '[data-elem-id=\"1597517662940\"]'\n        ],\n        newTab: true,                                 // 'new' для открытия в новой вкладке\n        minWidth: 1200                                // минимальная ширина экрана\n    })\n</script>"
    },
    {
        "id": "curtain-page-change",
        "name": "Переход по ссылкам со шторкой",
        "description": "позволяет добавить переход на страницы по ссылкам на картинках с помощью «шторки», скрывающей первую страницу и открывающей вторую.",
        "tags": ["другое"],
        "price": 1000,
        "video": "",
        "prep": "так как для хорошей работы этой фишки критически важна скорость ее загрузки, ее настройка отличается от настройки остальных фишек. Она не требует подключения всей библиотеки. Вместо этого в САМОМ НАЧАЛЕ страницы нужно вставить первую часть кода. Вторая часть кода (настройка фишки) должна стоять после всех ваших блоков, но перед настройками остальных фишек. Если вы настраиваете эту фишку для всех страниц своего сайта, логично поставить первый код в хедер (в самом его верху!), а второй — в футер.\nЕсли вы не хотите, чтобы шторка была видна при обычной загрузке сайта (переход по ссылке с других сайтов, перезагрузка страницы), необходимо вставить третий код в САМЫЙ ВЕРХ хедера сайта (который находится в настройках сайта -> еще -> Html-код для вставки внутрь HEAD)",
        "params": [
            {
                "param": "класс to-left",
                "desc": "может быть заменен на to-right, to-bottom или to-top — он задает направнение исчезновения шторки"
            },
            {
                "param": "стиль '--color: #fc04e2'",
                "desc": "задает цвет шторки (нужно поменять HEX код цвета на код вашего цвета)"
            },
            {
                "param": "elements",
                "desc": "селекторы элементов для ссылок (можно использовать тег ссылок 'a', чтобы настроить фишку для всех ссылок на странице, а можно конкретные data-elem-id)"
            },
            {
                "param": "appearFrom",
                "desc": "откуда будет появляться шторка (left / right / top / bottom) [справа]"
            },
            {
                "param": "useAsPreloader",
                "desc": "должна ли шторка дожидаться полной загрузки страницы (то есть использоваться как прелоудер) (true - да, false - нет) [нет]"
            }
        ],
        "code": "<div class=\"curtain-change__curtain animate to-left\" style=\"--color: #fc04e2\"></div>\n<style>.curtain-change__curtain {position: fixed;width: 100%;height: 100vh;background-color: var(--color);z-index: 99999;}</style>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://sirgoosethenaughty.github.io/fishkey_dev/modular/curtainPageChange/style.css\"/>\n<script type=\"text/javascript\" src=\"https://sirgoosethenaughty.github.io/fishkey_dev/modular/curtainPageChange/script.js\"></script>\n\n<script>\n    fishkey.curtainPageChange({\n        elements: '.link-container',    // селекторы элементов со ссылками (можно поставить 'a' для всех ссылок на странице)\n        appearFrom: 'right',            // направление появления шторки\n        useAsPreloader: true,           // использовать ли шторку как прелоудер\n    });\n</script>\n\n<script>\n    const useInitial = false;\n    if (!useInitial && localStorage.curtain !== 'true') {\n        $('head').append('<style id=\"curtain-helper\">.curtain-change__curtain{display: none !important}</style>')\n    }\n</script>"
    },
    {
        "id": "hor-drag",
        "name": "Горизонтальная перетаскивалка",
        "description": "даёт возможность перетаскивать содержимое блока, кликнув и потянув за элементы.",
        "tags": ["drag"],
        "price": 800,
        "video": "https://youtu.be/rMD9I0ce3rw",
        "prep": "в Тильде создается zero-block, который будет перетаскиваться горизонтально. Элементы, не вмещающиеся в экран, ставятся справа (выходя за границы блока).",
        "params": [
            {
                "param": "block",
                "desc": "id блока с перетаскивалкой"
            },
            {
                "param": "minWidth",
                "desc": "минимальная ширина экрана для анимации [1200]"
            },
            {
                "param": "hasDelay",
                "desc": "плавное перемещение (отставание) [нет]"
            },
            {
                "param": "delaySpeed",
                "desc": "скорость перемещения при отставании (0.1 - 5) [1]"
            }
        ],
        "code": "<script>\n    fishkey.horDrag({\n        block: '#rec236537294',         // перетаскиваемый блок\n        minWidth: 1200,                 // минимальная ширина экрана\n        hasDelay: true,                 // плавная прокрутка (опц)\n        delaySpeed: 1                   // скорость при отставании (0.1 - 5) (опц)\n    })\n</script>"
    },
    {
        "id": "preloader",
        "name": "Прелоудер",
        "description": "даёт возможность добавить на сайт прелоудер, который будет закрывать основной контент до полной загрузки материалов сайта (или заданное время).",
        "tags": ["другое"],
        "price": 600,
        "video": "https://youtu.be/SFSpKNTGaYA",
        "prep": "в Тильде создается zero-block, который будет выступать в качестве прелоудера. Первым блоком на сайте подключается библиотека, вторым ставится прелоудер, третьим — код инициализации фишки. Если в первых блоках после прелоудера есть изображения, им нужно отключить lazy-load.",
        "params": [
            {
                "param": "block",
                "desc": "id блока прелоудера "
            },
            {
                "param": "isWaiting",
                "desc": "дожидаться ли полной загрузки материалов или убирать прелоудер через заданное время [дожидаться]"
            },
            {
                "param": "delay",
                "desc": "задержка прелоудера (если в isWaiting задано true, delay соответствует минимальному времени видимости прелоудера) [0]"
            },
            {
                "param": "animTime",
                "desc": "время анимации в секундах [1]"
            },
            {
                "param": "howToClose",
                "desc": "принцип анимации (fade - исчезновение в прозрачность, go-up - слайд вверх, go-left - влево, go-down - вниз, go-right - вправо) [fade]"
            },
            {
                "param": "animFunction",
                "desc": "кривая безье или временная функция [linear]"
            }
        ],
        "code": "<script>\n    fishkey.preloader({\n        block: '#rec306952176',     // id блока прелоудера\n        isWaiting: true,            // дожидаться ли полной загрузки страницы\n        delay: 0.5,                 // задержка прелоудера\n        animTime: 1,                // время анимации\n        howToClose: 'go-up',        // принцип анимации (fade / go-up / go-left / go-down / go-right)\n        animFunction: 'ease'        // кривая безье анимации\n    })\n</script>"
    },
    {
        "id": "back-audio",
        "name": "Фоновое аудио",
        "description": "добавляет фоновое аудио из вашего файла с гугл-диска на сайт.",
        "additional": "правилом хорошего тона считается не ставить фоновое аудио включенным по-умолчанию (а некоторые браузеры дополнительно запрашивают у пользователя разрешение на воспроизведение или вовсе запрещают автоплей). Лучше сделать аудио выключенным и предложить пользователю включить его самому. Но если очень хочется, то хотя бы тихо :)\nЕсли все-таки не включили автовоспроизведение, не забудьте добавить хотя бы один триггер!",
        "tags": ["другое"],
        "price": 500,
        "video": "https://youtu.be/qqNbC0okyvI",
        "prep": "в Google Drive надо загрузить .mp3 файл с аудио и настроить для него доступ по ссылке. Если вы будете добавлять на сайт иконки включения / выключения, их надо добавить шейпом или картинкой (но в этом случае отключить lazyload в правой панели) и задать для них классы 'audio-on' и 'audio-off' соответственно (не в настройках фишки, а самим элементам!).",
        "params": [
            {
                "param": "link",
                "desc": "ссылка на файл в Google Drive"
            },
            {
                "param": "volume",
                "desc": "громкость воспроизведения от 0 до 1 [1]"
            },
            {
                "param": "switchOption",
                "desc": "логика включения и выключения: 'pause' - пауза, 'volume' - установка громкости на 0 [пауза]"
            },
            {
                "param": "autoplay",
                "desc": "будет ли аудио воспроизводиться по-умолчанию (true - да, false - нет) [нет]"
            },
            {
                "param": "loop",
                "desc": "будет ли аудио зацикливаться (true - да, false - нет) [false]"
            },
            {
                "param": "waitForInteraction",
                "desc": "если браузер запретил автовоспроизведение до взаимодействия пользователя со страницей, включать ли аудио по взаимодействию (клик в любом месте страницы) (true) или нет (false) [true]"
            }
        ],
        "code": "<script>\n    fishkey.backAudio({\n        link: 'https://drive.google.com/file/d/1TBIX6CLy8ibyDGTOGOKAuO07VC4PrsLL/view?usp=sharing',     // ссылка на файл\n        volume: 0.1,                // громкость\n        switchOption: 'volume',     // выключение по громкости (volume) или паузой (pause)\n        autoplay: true,             // автовоспроизведение (true - да, false - нет)\n        loop: true                  // будет ли зацикливаться (true - будет, false - нет)\n    });\n</script>"
    },
    {
        "id": "join-elements",
        "name": "Объединение элементов",
        "description": "позволяет объединить элементы в группу и настроить анимацию (базовую или step-by-step) сразу для всей группы",
        "additional": "Фишка в том, что на объединяемые элементы можно настроить отдельные анимации :)",
        "tags": ["другое"],
        "price": 0,
        "video": "https://youtu.be/UCAruGA3Oa4",
        "prep": "в Тильде создаются нужные элементы, а также объединяющий элемент: это может быть рамка, фон, прозрачный шейп (убирать не opacity, а удалением цвета заливки) и т.п. Все объединяемые элементы должны быть расположены строго внутри объединяющего. На данный момент объединяются только элементы, имеющие позиционирование grid-top-left. Анимация настраивается на объединяющий элемент.\nЕсли используется для фишки «3D-эффект элементов», можно задать общий селектор объединяющих элементов (второй кусочек кода), но сам элемент должен быть свой для каждой карточки (например, ее фон или рамка).",
        "params": [
            {
                "param": "wrapperSelectors",
                "desc": "селекторы объединяющих элементов"
            }
        ],
        "code": "<script>\n    fishkey.joinElements({\n        wrapperSelectors: [         // селекторы объединяющих элементов\n            '[data-elem-id=\"1620057598399\"]',\n            '[data-elem-id=\"1621274020845\"]'\n        ]\n    });\n</script>\n\n<script>\n    joinElements({\n        wrapperSelectors: [         // для кастомных карточек из фишки \"3D-карточки\"\n            '.customCard'\n        ]\n    });\n</script>"
    },
    {
        "id": "differ-on-browser",
        "name": "Смена элементов в разных браузерах",
        "description": "позволяет настроить отображение разных элементов или блоков в разных браузерах.",
        "additional": "в Тильде создаются отдельные элементы или блоки для разных браузеров (например, один блок для всех браузеров, кроме Safari, а другой только для Safari).",
        "tags": ["другое"],
        "price": 0,
        "video": "",
        "prep": "в Тильде создаются отдельные элементы или блоки для разных браузеров (например, один блок для всех браузеров, кроме Safari, а другой только для Safari).",
        "params": [
            {
                "param": "blocksToHide",
                "desc": "селекторы элементов или id блоков, которые будут прятаться для указанных браузеров"
            },
            {
                "param": "blocksToShow",
                "desc": "селекторы элементов или id блоков, которые будут показаны только для указанных браузеров"
            },
            {
                "param": "browsers",
                "desc": "браузеры: chrome, safari, firefox, opera, explorer, edge, samsung"
            }
        ],
        "code": "<script>\n    fishkey.differOnBrowser({\n        blocksToHide: '[data-elem-id=\"1470209944682\"]',     // элементы или блоки, которые будут прятаться для указанных браузеров\n        blocksToShow: '[data-elem-id=\"1614425367367\"]',     // элементы или блоки, которые будут показаны только для указанных браузеров\n        browsers: ['safari', 'explorer']                    // браузеры: chrome, safari, firefox, opera, explorer, edge, samsung\n    });\n</script>"
    }
];